{% extends 'base.twig' %}

{% block content %}
  <h1 class="mt-3">Welcome to this simple PHP skill test</h1>
  <br>
  <div class="lead">There are a couple of tasks in this small test. What you have to do:</div>

  <div class="tasks_container">
    <div class="tasks_group">
      <div class="task_header">Task 1</div>
      <div class="task">If you see this page, then you have succeeded the first task. You can proceed now with the next tasks but before continuing, please take a look to what is included in this page and to the following advices:</div>
    
      <div class="hints alert alert-primary" role="alert">
        The following libraries are already installed and ready-to-use. Information about them can be found in their respective websites:
        <ul>
          <li><a href="https://getbootstrap.com/" target="_blank" title="bootstrap page">Bootstrap</a> (version 4.5),</li>
          <li><a href="https://jquery.com" target="_blank" title="bootstrap page">jQuery</a> (version 3.5.1 slim),</li>
          <li><a href="https://twig.symfony.com/" target="_blank" title="twig page">Twig</a> (version 3.0.3) with the debug enabled and the dump() function available,</li>
          <li><a href="https://github.com/lipis/flag-icon-css" target="_blank" title="flag-icon-css github page">Flag-icon-css</a> (version 3.4.6),</li>
          <li><a href="https://fontawesome.com/" target="_blank" title="fontwawesome page">Fontawesome</a> (version 5.11.2).</li>
        </ul>
      </div>
      <div class="hints alert alert-success" role="alert">Read the description of each task carefully, as might contain some clues or guidance for finishing the task.</div>
      <div class="hints alert alert-success" role="alert">Following coding standars (PHP or even Drupal ones) will be highly valued, as well readability and cleaninness of the code and number of lines used.</div>
      <div class="hints alert alert-success" role="alert">The result of each task will be displayed right after the task description and before the next one. Cache is disabled, so the output should appear automatically each time the page is refreshed.</div>
      <div class="hints alert alert-success" role="alert">In order to finish the task, the <strong>main</strong> goal is required. Finishing the optional subtasks are not mandatory but recommended.</div>
    </div>

    <hr class="separation">
    
    <div class="tasks_group">
      <div class="task_header">Task 2</div>
      <div class="task">Inside the file <code>templates/blocks_front.twig</code>, the block <code>solution_news</code> is empty right now but you need to finish it in order to solve this task.</div>
      <div class="task">All the data needed for this task is already available in the twig file (as is mentioned in the twig file), you just need to render as will request now.</div>
      <div class="task"><strong>The main tasks are:</strong>
        <ul>
          <li>Using the bootstrap <strong>Card component</strong>, render a previsualisation of the last three articles availables form the list.</li>
          <li>The three articles need to appear horizontally, one next to the other, and with the proper separation in between each article.</li>
          <li>The previsualisation must contain the title, the date, the first 250 chars of the article followed by '...' (or just the full article if the lenght is less), and a 'Go to the article' link (use '#' instead of a real URL).</li>
          <li>If extra css is needed, please use the inline 'style' html property. We leave the design up to you.</li>
        </ul>
      </div>
      <div class="task"><em>The optional subtasks are:</em>
        <ul>
          <li>The previsualisation can contain as well of the images that is available in the article.</li>
          <li>If there is no image, show instead a placeholder from <a href="https://placeholder.com/" target="_blank">placeholder.com</a>.</li>
        </ul>
      </div>     

      <div class="solution_container">
        <div class="solution_header">Solution to Task 2</div>
        {% block solution_news %}
          {% if num_articles == 0 %}
            <div><em>It seems there is an error and no articles have been fetched.</em></div>
          {% else %}
            <div><em>There are {{ num_articles }} fetched and you can proceed with the task.</em></div>
          {% endif %}
        {% endblock %}
      </div>
    </div>

    <hr class="separation">
    
    <div class="tasks_group">
      <div class="task_header">Task 3</div>
      <div class="task">The class file <code>src/TestController.php</code> needs to be finished, as well the respective block in the twig file.</div>
      <div class="task">As you can see, that class extends an existing class, but is almost empty except for a function that returns, for now, an empty array.</div>
      <div class="task">The extended class is in charge of fetching information belonging to ESN (countries, sections, etc.) from an API (but the returned data is a bit messy, and in several endpoints), and we want to show this information in a nice way by using again the <strong>Card component</strong> and extending its behaviour to create and structure that uses the accordion format, as Bootstrap offers.</div>
      <div class="task"><em>This accordion must contain one ESN country per group item (header) and inside the panel of this group item, all of the sections belonging to this country. In the header it must appear the flag and name of the country and the number of the sections belonging to it (leaving the style of this up to the user). The list of ESN sections that belongs to that country needs to be placed inside the panel. All the panes must be collapsibles and must stay closed the moment the accordion is firstly rendered.</em></div>
      <div class="task"><strong>The main tasks are:</strong>
        <ul>
          <li>To complete the <code>getData()</code> function, returning what is needed to build the required accordion.</li>
          <li>To finish the <code>solution_accordion</code> twig block in the file <code>templates/blocks_front.twig</code> using the returned value of the previous functions in the format of the mentioned accordion.</li>
          <li>There are multiple solutions to this approach, use the one that is easier for you.</li>
        </ul>
      </div>
      <div class="task"><em>The optional subtasks are:</em>
        <ul>
          <li>If the section have a website, show it by using the proper font-awesome icon and opening it in a new page just after the code.</li>
          <li>Sort the list by country name and/or by section name too.</li>
        </ul>
      </div>

      <div class="hints alert alert-primary" role="alert">
        <div>Some hints:</div>
        <ul>
          <li>You can create in your class as much as functions as wanted.</li>
          <li>The twig file loads automatically the variable, the documentation inside that file can be useful.</li>
          <li>The other files inside <code>src/Controller</code> are already documented. Taking a look to them can be usefull.</li>
        </ul>
      </div>
      <div class="task"><strong>The next image can be used as a reference for the output with one panel opened (it does not include the extra tasks).</strong></div>
      <div class="task" id="exampleAccordion" data-children=".item">
        <div class="item">
          <a data-toggle="collapse" data-parent="#exampleAccordion" href="#exampleAccordion1" aria-expanded="true" aria-controls="exampleAccordion1">
            Show Image
          </a>
          <div id="exampleAccordion1" class="collapse" role="tabpanel">
            <img src="./assets/img/task_1.png" alt="task1 example" class="img-fluid"/>
          </div>
        </div>
      </div>

      <div class="solution_container">
        <div class="solution_header">Solution to Task 3</div>
        {% block solution_accordion %}
          <div><em>The solution will appear here once the proper file is written.</em></div>
        {% endblock %}
      </div>
    </div>

    <hr class="separation">

    <div class="tasks_group">
      <div class="task_header">Task 4</div>
      <div class="task">Do a <code>pull request</code> to our GitHub <i class="fab fa-github"></i> repository.</div>
    </div>
  </div>
{% endblock %}
